"""Add user settings columns

Revision ID: fe3a121022d3
Revises: bd46dda07681
Create Date: 2025-08-06 15:25:19.613286-07:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fe3a121022d3'
down_revision = 'bd46dda07681'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_status_rules_id', table_name='status_rules')
    op.drop_index('ix_status_rules_user_id', table_name='status_rules')
    op.drop_table('status_rules')
    op.drop_index('ix_interview_preparations_checklist_item_id', table_name='interview_preparations')
    op.drop_index('ix_interview_preparations_id', table_name='interview_preparations')
    op.drop_index('ix_interview_preparations_interview_id', table_name='interview_preparations')
    op.drop_table('interview_preparations')
    op.drop_index('ix_interview_checklist_items_id', table_name='interview_checklist_items')
    op.drop_index('ix_interview_checklist_items_template_id', table_name='interview_checklist_items')
    op.drop_table('interview_checklist_items')
    op.drop_index('ix_contacts_id', table_name='contacts')
    op.drop_index('ix_contacts_user_id', table_name='contacts')
    op.drop_table('contacts')
    op.drop_index('ix_networking_events_id', table_name='networking_events')
    op.drop_index('ix_networking_events_user_id', table_name='networking_events')
    op.drop_table('networking_events')
    op.drop_index('ix_interview_preparation_templates_id', table_name='interview_preparation_templates')
    op.drop_index('ix_interview_preparation_templates_user_id', table_name='interview_preparation_templates')
    op.drop_table('interview_preparation_templates')
    op.drop_index('ix_interviews_id', table_name='interviews')
    op.drop_index('ix_interviews_job_application_id', table_name='interviews')
    op.drop_table('interviews')
    op.drop_index('ix_contact_interactions_contact_id', table_name='contact_interactions')
    op.drop_index('ix_contact_interactions_id', table_name='contact_interactions')
    op.drop_index('ix_contact_interactions_job_application_id', table_name='contact_interactions')
    op.drop_table('contact_interactions')
    op.drop_column('companies', 'industry')
    op.drop_column('companies', 'size')
    op.drop_column('companies', 'founded_year')
    op.drop_column('companies', 'employee_count')
    op.drop_column('companies', 'headquarters')
    op.drop_column('job_applications', 'priority')
    op.drop_column('job_applications', 'follow_up_date')
    op.drop_column('job_applications', 'offer_amount')
    op.drop_column('job_applications', 'next_action_date')
    op.drop_column('job_applications', 'rejection_reason')
    op.drop_column('job_applications', 'next_action')
    op.drop_column('job_applications', 'stage')
    op.drop_column('job_applications', 'response_deadline')
    op.drop_column('job_applications', 'ai_skills_extracted')
    op.drop_column('job_applications', 'ai_match_score')
    op.drop_column('job_applications', 'ai_summary')
    op.drop_constraint('online_status_user_id_key', 'online_status', type_='unique')
    op.drop_index('ix_online_status_user_id', table_name='online_status')
    op.create_index(op.f('ix_online_status_user_id'), 'online_status', ['user_id'], unique=True)
    op.drop_constraint('privacy_settings_user_id_key', 'privacy_settings', type_='unique')
    op.drop_index('ix_privacy_settings_user_id', table_name='privacy_settings')
    op.create_index(op.f('ix_privacy_settings_user_id'), 'privacy_settings', ['user_id'], unique=True)
    op.add_column('users', sa.Column('profile_visibility', sa.String(), nullable=False))
    op.add_column('users', sa.Column('analytics_sharing', sa.Boolean(), nullable=False))
    op.add_column('users', sa.Column('theme', sa.String(), nullable=False))
    op.add_column('users', sa.Column('date_format', sa.String(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'date_format')
    op.drop_column('users', 'theme')
    op.drop_column('users', 'analytics_sharing')
    op.drop_column('users', 'profile_visibility')
    op.drop_index(op.f('ix_privacy_settings_user_id'), table_name='privacy_settings')
    op.create_index('ix_privacy_settings_user_id', 'privacy_settings', ['user_id'], unique=False)
    op.create_unique_constraint('privacy_settings_user_id_key', 'privacy_settings', ['user_id'])
    op.drop_index(op.f('ix_online_status_user_id'), table_name='online_status')
    op.create_index('ix_online_status_user_id', 'online_status', ['user_id'], unique=False)
    op.create_unique_constraint('online_status_user_id_key', 'online_status', ['user_id'])
    op.add_column('job_applications', sa.Column('ai_summary', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('job_applications', sa.Column('ai_match_score', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('job_applications', sa.Column('ai_skills_extracted', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('job_applications', sa.Column('response_deadline', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('job_applications', sa.Column('stage', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('job_applications', sa.Column('next_action', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('job_applications', sa.Column('rejection_reason', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('job_applications', sa.Column('next_action_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('job_applications', sa.Column('offer_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True))
    op.add_column('job_applications', sa.Column('follow_up_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('job_applications', sa.Column('priority', sa.VARCHAR(), server_default=sa.text("'medium'::character varying"), autoincrement=False, nullable=False))
    op.add_column('companies', sa.Column('headquarters', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('companies', sa.Column('employee_count', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('companies', sa.Column('founded_year', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('companies', sa.Column('size', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('companies', sa.Column('industry', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_table('contact_interactions',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('contact_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('job_application_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('interaction_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('subject', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('direction', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('interaction_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('follow_up_required', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('follow_up_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('follow_up_completed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('outcome', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('led_to_opportunity', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], name='contact_interactions_contact_id_fkey'),
    sa.ForeignKeyConstraint(['job_application_id'], ['job_applications.id'], name='contact_interactions_job_application_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='contact_interactions_pkey')
    )
    op.create_index('ix_contact_interactions_job_application_id', 'contact_interactions', ['job_application_id'], unique=False)
    op.create_index('ix_contact_interactions_id', 'contact_interactions', ['id'], unique=False)
    op.create_index('ix_contact_interactions_contact_id', 'contact_interactions', ['contact_id'], unique=False)
    op.create_table('interviews',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('job_application_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('interview_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('scheduled_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('completed_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('duration_minutes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('interviewer_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('interviewer_role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('interviewer_email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('outcome', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('feedback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('preparation_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('questions_asked', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('questions_to_ask', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('technical_topics', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('follow_up_required', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('follow_up_sent', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('follow_up_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('communication_rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('technical_rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cultural_fit_rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('difficulty_level', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('would_recommend_company', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['job_application_id'], ['job_applications.id'], name='interviews_job_application_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='interviews_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_interviews_job_application_id', 'interviews', ['job_application_id'], unique=False)
    op.create_index('ix_interviews_id', 'interviews', ['id'], unique=False)
    op.create_table('interview_preparation_templates',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('interview_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_default', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='interview_preparation_templates_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='interview_preparation_templates_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_interview_preparation_templates_user_id', 'interview_preparation_templates', ['user_id'], unique=False)
    op.create_index('ix_interview_preparation_templates_id', 'interview_preparation_templates', ['id'], unique=False)
    op.create_table('networking_events',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('event_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('virtual_link', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('event_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('duration_hours', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('attendance_status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('contacts_made', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('follow_ups_required', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('opportunities_identified', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='networking_events_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='networking_events_pkey')
    )
    op.create_index('ix_networking_events_user_id', 'networking_events', ['user_id'], unique=False)
    op.create_index('ix_networking_events_id', 'networking_events', ['id'], unique=False)
    op.create_table('contacts',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('linkedin_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('company', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('department', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('relationship_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('connection_strength', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_contact_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('tags', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('preferred_contact_method', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('timezone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='contacts_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='contacts_pkey')
    )
    op.create_index('ix_contacts_user_id', 'contacts', ['user_id'], unique=False)
    op.create_index('ix_contacts_id', 'contacts', ['id'], unique=False)
    op.create_table('interview_checklist_items',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('template_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('priority', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('estimated_time_minutes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('order_index', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_required', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['template_id'], ['interview_preparation_templates.id'], name='interview_checklist_items_template_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='interview_checklist_items_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_interview_checklist_items_template_id', 'interview_checklist_items', ['template_id'], unique=False)
    op.create_index('ix_interview_checklist_items_id', 'interview_checklist_items', ['id'], unique=False)
    op.create_table('interview_preparations',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('interview_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('checklist_item_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('completed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('custom_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('time_spent_minutes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['checklist_item_id'], ['interview_checklist_items.id'], name='interview_preparations_checklist_item_id_fkey'),
    sa.ForeignKeyConstraint(['interview_id'], ['interviews.id'], name='interview_preparations_interview_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='interview_preparations_pkey')
    )
    op.create_index('ix_interview_preparations_interview_id', 'interview_preparations', ['interview_id'], unique=False)
    op.create_index('ix_interview_preparations_id', 'interview_preparations', ['id'], unique=False)
    op.create_index('ix_interview_preparations_checklist_item_id', 'interview_preparations', ['checklist_item_id'], unique=False)
    op.create_table('status_rules',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('from_status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('to_status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('rule_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('conditions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('auto_transition', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('priority', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='status_rules_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='status_rules_pkey')
    )
    op.create_index('ix_status_rules_user_id', 'status_rules', ['user_id'], unique=False)
    op.create_index('ix_status_rules_id', 'status_rules', ['id'], unique=False)
    # ### end Alembic commands ###